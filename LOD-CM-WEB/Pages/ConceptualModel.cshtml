@page "/lod-cm/ConceptualModel"
@model ConceptualModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Conceptual Model";
}

<h2>Conceptual model for <span class="important">@Model.ClassName</span> class in 
    <span class="important">@Model.DatasetLabel</pan></h2>
<p>
    Current threshold is set to @Model.Threshold%, i.e. all properties of a group
    are present together in at least @Model.Threshold% of 
    @Model.ClassName's instances.
</p>
<div>
    @if (!string.IsNullOrWhiteSpace(@Model.ErrorMessage))
    {
        Html.Raw(@Model.ErrorMessage);
    }
</div>
<br/>
<div>
    <header class="bold">Select a group of maximal frequent itemset:</header>
    <p>Each property group is present simultaneously in @Model.Threshold% of instances.</p>    
    @for (int i = 0; i < Model.properties.Count; i++)
    {
        if (i == 0)
        {
            @Html.RadioButtonFor(m => m.Selection, i, new { Class = "mfp", Checked = "checked" })
            @Html.Raw("&nbsp;")
            @string.Join(", ", Model.properties[i].OrderBy(x => x).Select(x => x.Label)) <br/>
        }
        else
        {
            @Html.RadioButtonFor(m => m.Selection, i, new { Class = "mfp" })
            @Html.Raw("&nbsp;")
            @string.Join(", ", Model.properties[i].OrderBy(x => x).Select(x => x.Label)) <br/>
        }        
    }
</div>
<br/>
<div>
    <span class="bold">Tips:</span> can <span class="important">right</span> click on a class to delete it from the diagram. You can also zoom-in
    on a class, i.e. compute the conceptual model of the selected class with the currently
    specified threshold. In this way, you can somehow navigate through the graph, 
    or more precisely, through its CM.
</div>
<div class="text-center">
    <div id="imageContent">
        @Html.Raw(Model.ImageContent)
    </div>
</div>
<div id="deletedClassesParent">    
    <header>Deleted classes:</header>
    Left click on a class name to restore it.
    <ul id="deletedClasses">

    </ul>
</div>
@for (int i = 0; i < Model.images.Count; i++)
{
    var imgContent = Model.images[i];
    var id = "svg" + i;
    @Html.HiddenFor(x => imgContent, new { Class = "svgContent", id = id })
}
<input asp-for="ClassName" />
<input asp-for="Threshold" />
<input asp-for="DatasetLabel" />
@section Scripts {    
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous">
    <script src="lib/contextmenu/jquery.contextMenu.js"></script>
    <script src="lib/contextmenu/jquery.ui.position.min.js"></script>
    <link rel="stylesheet" href="lib/contextmenu/jquery.contextMenu.min.css">    
    <script src="~/js/cm.js" asp-append-version="true"></script>
}